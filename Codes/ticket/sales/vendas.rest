### Arquivo de Testes para o Microsserviço de Vendas

# --- Variáveis de Ambiente ---
@hostname = localhost
@port = 4000
@baseUrl = http://{{hostname}}:{{port}}
@eventId = 
@saleId =

####################################################
### 1. HEALTH CHECK
####################################################

# @name getStatus
GET {{baseUrl}}/status


###
####################################################
### 2. CRUD DE EVENTOS
####################################################

# @name createEvent
# Cria um novo evento e captura o ID dele na variável @eventId
POST {{baseUrl}}/events
Content-Type: application/json

{
    "description": "Show de Rock da Banda XYZ",
    "type": "CONCERT",
    "date": "2025-10-20T20:00:00",
    "startSales": "2025-08-01T09:00:00",
    "endSales": "2025-10-19T23:59:00",
    "price": 150.50
}

> {%
    client.global.set("eventId", response.body.id);
%}


###
# @name getAllEvents
# Lista todos os eventos cadastrados
GET {{baseUrl}}/events


###
# @name getEventById
# Busca o evento específico
GET {{baseUrl}}/events/246e71f0-245a-4e4c-8b6b-bcdf6918b831


###
# @name updateEvent
# Atualiza o evento (usando PUT)
PUT {{baseUrl}}/events/246e71f0-245a-4e4c-8b6b-bcdf6918b831
Content-Type: application/json

{
    "description": "Show de Rock da Banda XYZ - ATUALIZADO",
    "type": "CONCERT",
    "date": "2025-10-21T21:00:00",
    "startSales": "2025-08-01T09:00:00",
    "endSales": "2025-10-20T23:59:00",
    "price": 175.00
}


###
####################################################
### 3. CRUD DE VENDAS
####################################################

# @name createSale
# Cria uma nova venda para o evento criado acima e captura o ID da venda
POST {{baseUrl}}/sales
Content-Type: application/json

{
    "userId": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
    "eventId": "246e71f0-245a-4e4c-8b6b-bcdf6918b831",
    "saleStatus": "OPEN"
}

> {%
    client.global.set("saleId", response.body.id);
%}


###
# @name getAllSales
# Lista todas as vendas cadastradas
GET {{baseUrl}}/sales


###
# @name getSaleById
# Busca a venda específica que acabei de criar
GET {{baseUrl}}/sales/5c127e32-e057-42ea-a8d2-179cd9399b1b


###
# @name updateSaleStatus
# Atualiza o status da venda para PAGO (usando PATCH)
PATCH {{baseUrl}}/sales/c5a6dfc8-2c0b-43ee-92bd-0df1825c012e
Content-Type: application/json

{
    "saleStatus": "PAID"
}


###
# @name deleteSale
# Deleta a venda que criei e testei
# Exemplo para a primeira venda
DELETE {{baseUrl}}/sales/5c127e32-e057-42ea-a8d2-179cd9399b1b

###
# Exemplo para a segunda venda
DELETE {{baseUrl}}/sales/c5a6dfc8-2c0b-43ee-92bd-0df1825c012e

####################################################

###
# @name deleteEvent
# No final, deleta o evento que criei e testei
DELETE {{baseUrl}}/events/246e71f0-245a-4e4c-8b6b-bcdf6918b831
